.tile {
  background: color-mix(in srgb, var(--off-black-1) 95%, transparent);
  width: calc(50% - 24px);
  aspect-ratio: 1;
  border-radius: 8px;
  box-shadow: -18px 12px 32px rgba(0, 0, 0, 0.2);
  padding: 0;
  margin: 10px;
  box-sizing: border-box;
  position: relative;
  display: inline-block;
  vertical-align: top;
  flex-direction: column;
  transition: all 0.4s cubic-bezier(0.2, 0, 0, 1);
  color: var(--off-white);
  font-size: 1vw;
  overflow: hidden;
  transform-origin: center center;
  z-index: 1;
  opacity: 1 !important;
}

.tile:not(.roomTile):not(.collapsed) {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1000;
  width: 80%;
  max-width: 1200px;
  height: 80vh;
  max-height: 800px;
  margin: 0;
  transition: transform 0.4s cubic-bezier(0.2, 0, 0, 1),
              width 0.4s cubic-bezier(0.2, 0, 0, 1),
              height 0.4s cubic-bezier(0.2, 0, 0, 1),
              top 0.4s cubic-bezier(0.2, 0, 0, 1),
              left 0.4s cubic-bezier(0.2, 0, 0, 1),
              background 0.4s cubic-bezier(0.2, 0, 0, 1);
}

.tile:not(.roomTile):not(.collapsed):hover {
  background: var(--off-black-1);
}

.roomTile {
  position: relative;
  float: left;
  transition: none; /* Disable transitions for room tiles */
}

.tile.collapsed {
  position: relative;
  transform: none;
  width: 200px;
  height: 200px;
  min-height: unset;
  max-height: unset;
  display: inline-flex;
  flex-direction: column;
  overflow: hidden;
  transition: all 0.4s cubic-bezier(0.2, 0, 0, 1);
  z-index: 1;
  opacity: 1;
}

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 999;
  opacity: 0;
  pointer-events: none;
  visibility: hidden;
  transition: opacity 0.4s cubic-bezier(0.2, 0, 0, 1),
              visibility 0.4s cubic-bezier(0.2, 0, 0, 1);
}

.backdrop.visible {
  opacity: 1;
  pointer-events: auto;
  visibility: visible;
}

@media (max-width: 1024px) {
  .tile {
    width: calc(100% - 20px);
    margin: 10px;
    font-size: 1.5vw;
    transition: all 0.3s ease-in-out;
  }

  .tile:not(.roomTile):not(.collapsed) {
    width: 90%;
    height: 90vh;
  }
}

@media (max-width: 768px) {
  .tile {
    font-size: 2vw;
    
    .tile.collapsed,
    .placeholder {
      width: 180px;
      height: 180px;
    }
    
    .minimized-icon svg {
      width: 60%;
      height: 60%;
    }
    
    .collapsed-content Typography {
      font-size: 1rem;
    }

    /* Ensure tiles take full width */
    width: 100% !important;
    max-width: none !important;
  }

  .secondary-components {
    flex-direction: column; /* Ensure vertical stacking */
    width: 100%;
  }
}

@media (max-width: 480px) {
  .tile {
    font-size: 2.5vw;
    
    .tile.collapsed,
    .placeholder {
      width: 150px;
      height: 150px;
    }
    
    .minimized-icon svg {
      width: 50%;
      height: 50%;
    }
    
    .collapsed-content Typography {
      font-size: 0.9rem;
    }
    
    /* Ensure tiles take full width */
    width: 100% !important;
    max-width: none !important;
  }

  .secondary-components {
    gap: 10px; /* Increase gap for smaller screens */
  }
}

.tile-header-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.0rem;
  border: inherit;
}

.tile-header {
  font-size: 1rem;
  padding-left: 0.5rem;
  margin: 0;
}

.help-icon-container {
  position: relative;
  cursor: help;
  margin-right: 8px;
}

.help-icon {
  font-size: 2.5em;
  color: var(--off-white);
  border-radius: 100%;
  transition: background-color, color 1s ease;
}

.help-icon:hover {
  color: var(--off-black-1);
  background-color: var(--bright-yellow);
}

.help-icon-container::after {
  content: attr(title);
  position: absolute;
  background-color: var(--off-black-2);
  color: var(--off-white);
  padding: 5px 10px;
  border-radius: 4px;
  font-size: 0.9em;
  white-space: nowrap;
  z-index: 1;
  top: calc(100% + 6px);
  left: 50%;
  transform: translateX(-50%);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s, visibility 0.3s;
}

.help-icon-container::before {
  content: '';
  position: absolute;
  border: 6px solid transparent;
  border-bottom-color: var(--off-black-2);
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s, visibility 0.3s;
}

.tile-content {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  overflow: hidden;
  color: var(--off-white);
  padding: 0;
  margin: 0;
}

.icon-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 80%;
  height: 80%;
  position: relative;
  margin: 5% 0;
}

.large-icon {
  color: var(--bright-teal);
  width: 100%;
  height: 100%;
  position: absolute;
  align-items: center;
  font-size: 15em;
  top: 10%;
}

.minimized-icon {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  max-height: 70%;
}

.minimized-icon svg {
  width: 70%;
  height: 70%;
  max-width: 120px;
  max-height: 120px;
  fill: var(--off-white);
}

@media (min-width: 768px) {
  .minimized-icon svg {
    width: 120px;
    height: 120px;
  }
}

.collapsed-content Typography {
  font-size: 1.5rem;
  font-weight: bold;
  margin-top: 0.5rem;
}

.minimized {
  width: 25%;
  height: 25%;
}

.minimized-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
}

.tile-header-icons .MuiSvgIcon-root {
  color: var(--off-white);
}

.collapsed-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
}

/* Consolidate placeholder styles */
.placeholder {
  display: inline-block;
  width: 200px;
  height: 200px;
  margin: 10px;
  opacity: 0;
  transition: opacity 0.4s cubic-bezier(0.2, 0, 0, 1);
  pointer-events: none;
  position: relative;
}

.placeholder.visible {
  opacity: 1;
}

/* Ensure expanded tiles don't affect layout flow */
.tile:not(.roomTile):not(.collapsed) {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1000;
  margin: 0;
}

/* Keep collapsed tiles properly positioned */
.tile.collapsed {
  position: relative;
  transform: none;
  transition: all 0.4s cubic-bezier(0.2, 0, 0, 1);
  opacity: 1;
  z-index: 1;
}


/* Media queries for placeholder */
@media (max-width: 768px) {
  .placeholder {
    width: 180px;
    height: 180px;
  }
  
  .tile.collapsed {
    width: 180px;
    height: 180px;
  }
}

@media (max-width: 480px) {
  .placeholder {
    width: 150px;
    height: 150px;
  }
  
  .tile.collapsed {
    width: 150px;
    height: 150px;
  }
}
/* Add smooth transition for non-expanding tiles */
.tile:not(:not(.roomTile):not(.collapsed)) {
  transition: transform 0.4s cubic-bezier(0.2, 0, 0, 1),
              left 0.4s cubic-bezier(0.2, 0, 0, 1),
              top 0.4s cubic-bezier(0.2, 0, 0, 1),
              width 0.4s cubic-bezier(0.2, 0, 0, 1),
              height 0.4s cubic-bezier(0.2, 0, 0, 1);
}

/* Add responsive styles */
@media (max-width: 768px) {
  .tile {
    width: calc(100% - 24px); /* Full width on mobile */
    aspect-ratio: 1; /* Maintain square aspect ratio */
  }
}

/* Update the transitioning tile styles */
.tile.isTransitioning {
  z-index: 1000 !important; /* Force highest z-index during transition */
  transition: all 0.4s cubic-bezier(0.2, 0, 0, 1);
}

/* Update collapsed state to only apply after transition is complete */
.tile.collapsed:not(.isTransitioning) {
  z-index: 1;
}

/* Consolidate Material-UI text field styles */
.tile-text-field {
  color: var(--off-white) !important;
  font-size: 1em !important;
  width: 100% !important;
}

.tile-text-field :global(.MuiInputBase-input),
.tile-text-field :global(.MuiInputLabel-root) {
  color: var(--off-white) !important;
  font-size: 1.1em !important;
  padding: 12px !important;
}

.tile-text-field :global(.MuiOutlinedInput-root),
.tile-select :global(.MuiOutlinedInput-root) {
  background-color: rgba(1, 1, 1, 0.5) !important;
  border-radius: 8px !important;
}

.tile-text-field :global(.MuiOutlinedInput-notchedOutline),
.tile-select :global(.MuiOutlinedInput-notchedOutline),
.tile-text-field :global(.MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline),
.tile-text-field :global(.MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline),
.tile-select:hover :global(.MuiOutlinedInput-notchedOutline),
.tile-select.Mui-focused :global(.MuiOutlinedInput-notchedOutline) {
  border-color: var(--off-white) !important;
}

/* Consolidate Material-UI select styles */
.tile-select {
  color: var(--off-white) !important;
  font-size: 1em !important;
  width: calc(100% - 8px) !important;
}

.tile-select :global(.MuiSelect-select),
.select-label {
  color: var(--off-white) !important;
  font-size: 1.1em !important;
  padding: 12px !important;
}

.tile-select :global(.MuiSelect-icon) {
  color: var(--off-white) !important;
}

/* Consolidate shared Material-UI responsive styles */
@media (min-width: 600px) {
  .tile-text-field :global(.MuiInputBase-input),
  .tile-text-field :global(.MuiInputLabel-root),
  .tile-select :global(.MuiSelect-select),
  .select-label {
    font-size: 1.2rem !important;
    padding: 14px !important;
  }
}

@media (min-width: 960px) {
  .tile-text-field :global(.MuiInputBase-input),
  .tile-text-field :global(.MuiInputLabel-root),
  .tile-select :global(.MuiSelect-select),
  .select-label {
    font-size: 1.3rem !important;
    padding: 16px !important;
  }
}

